{"version":3,"sources":["quizService/data.js","components/QuestionBox.js","components/Result.js","index.js"],"names":["qBank","question","answers","correct","questionId","n","Promise","resolve","sort","Math","random","slice","QuestionBox","options","selected","useState","answer","setAnswer","className","map","text","index","key","onClick","Result","score","playAgain","Quizbee","state","questionBank","responses","computeAnswer","setState","getQuestions","quizService","then","this","length","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.13646bbd.chunk.js","sourcesContent":["const qBank = [\n  {\n    question: \"java.util.Collections is a: \",\n    answers: [\"Class\", \"Interface\", \"Object\", \"None of the above\"],\n    correct: \"Class\",\n    questionId: \"099099\",\n  },\n  {\n    question: \"Methods such as reverse, shuffle are offered in:\",\n    answers: [\n      \"Object\",\n      \"Collection\",\n      \"Collections\",\n      \"Apache Commons Collections\",\n    ],\n    correct: \"Collections\",\n    questionId: \"183452\",\n  },\n  {\n    question: \"Which of those allows duplicate elements?\",\n    answers: [\"Set\", \"List\", \"All\", \"None of the above\"],\n    correct: \"List\",\n    questionId: \"267908\",\n  },\n  {\n    question: \"What guarantees type-safety in a collection?\",\n    answers: [\"Generics\", \"Abstract classes\", \"Interfaces\", \"Collection\"],\n    correct: \"Generics\",\n    questionId: \"333247\",\n  },\n  {\n    question: \"HashSet internally uses?\",\n    answers: [\"Set\", \"HashMap\", \"List\", \"Collection\"],\n    correct: \"Set\",\n    questionId: \"496293\",\n  },\n  {\n    question: \"The root interface of Java collection framework hierarchy is -\",\n    answers: [\"Collection\", \"Root\", \"Collections\", \"List\"],\n    correct: \"Collection\",\n    questionId: \"588909\",\n  },\n  {\n    question: \"Vector extends that of these?\",\n    answers: [\"ArrayList\", \"LinkedList\", \"AbstractList\", \"None\"],\n    correct: \"AbstractList\",\n    questionId: \"648452\",\n  },\n  {\n    question: \"Which doesn't permit to store a null value?\",\n    answers: [\"TreeSet\", \"LinkedHashSet\", \"HashSet\", \"None\"],\n    correct: \"TreeSet\",\n    questionId: \"786649\",\n  },\n  {\n    question: \"Which of these is sorted by default\",\n    answers: [\"LinkedHashSet\", \"TreeSet\", \"HashSet\", \"None of the above\"],\n    correct: \"TreeSet\",\n    questionId: \"839754\",\n  },\n  {\n    question: \"An attempt to add the null key to a TreeSet will result in:\",\n    answers: [\n      \"Will compile\",\n      \"Compile time Exception\",\n      \"Error\",\n      \"Runtime - NullPointerException\",\n    ],\n    correct: \"Runtime - NullPointerException\",\n    questionId: \"98390\",\n  },\n  {\n    question:\n      \"The efficiency and accuracy of a HashMap are often warranted with:\",\n    answers: [\n      \"Override equals method\",\n      \"Override hashCode method\",\n      \"None of these\",\n      \"Both a and b\",\n    ],\n    correct: \"Both a and b\",\n    questionId: \"1071006\",\n  },\n  {\n    question: \"A HashMap permits the existence of:\",\n    answers: [\"null values\", \"one null key\", \"None of these\", \"Both of these\"],\n    correct: \"Both of these\",\n    questionId: \"1174154\",\n  },\n  {\n    question:\n      \"In an Iterator what implementation will traverse a collection in each direction?\",\n    answers: [\"Iterator\", \"ListIterator\", \"SetIterator\", \"MapIterator\"],\n    correct: \"SetIterator\",\n    questionId: \"1226535\",\n  },\n];\n\nexport default (n = 5) =>\n  Promise.resolve(qBank.sort(() => 0.5 - Math.random()).slice(0, n));\n","import React, { useState } from \"react\";\n\nfunction QuestionBox({ question, options, selected }) {\n  const [answer, setAnswer] = useState(options);\n  return (\n    <div className=\"questionBox\">\n      <div className=\"question\">{question}</div>\n      {answer.map((text, index) => (\n        <button\n          key={index}\n          className=\"answerBtn\"\n          onClick={() => {\n            setAnswer([text]);\n            selected(text);\n          }}\n        >\n          {text}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default QuestionBox;\n","import React from \"react\";\n\nconst Result = ({score, playAgain}) => (\n  <div className=\"score-board\">\n    <div className=\"score\">You scored {score} / 5 correct answers!</div>\n    <button className=\"playBtn\" onClick={playAgain}>\n      Play again!\n    </button>\n  </div>\n);\n\nexport default Result;\n","import React, { Component } from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport \"./assets/style.css\";\r\nimport quizService from \"./quizService/data\";\r\nimport QuestionBox from \"./components/QuestionBox\";\r\nimport Result from \"./components/Result\";\r\n\r\nclass Quizbee extends Component {\r\n  state = {\r\n    questionBank: [],\r\n    score: 0,\r\n    responses: 0,\r\n  };\r\n  computeAnswer = (answer, correct) => {\r\n    if (answer === correct) {\r\n      this.setState({\r\n        score: this.state.score + 1,\r\n      });\r\n    }\r\n    this.setState({\r\n      responses: this.state.responses < 5 ? this.state.responses + 1 : 5,\r\n    });\r\n  };\r\n  playAgain = () => {\r\n    this.getQuestions();\r\n    this.setState({\r\n      score: 0,\r\n      responses: 0,\r\n    });\r\n  };\r\n  getQuestions = () => {\r\n    quizService().then((question) => {\r\n      this.setState({\r\n        questionBank: question,\r\n      });\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getQuestions();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"title\">Java Quiz</div>\r\n        {this.state.questionBank.length > 0 &&\r\n          this.state.responses < 5 &&\r\n          this.state.questionBank.map(\r\n            ({ question, answers, correct, questionId }) => (\r\n              <QuestionBox\r\n                question={question}\r\n                options={answers}\r\n                key={questionId}\r\n                selected={(answer) => this.computeAnswer(answer, correct)}\r\n              />\r\n            )\r\n          )}\r\n        {this.state.responses === 5 ? (\r\n          <Result score={this.state.score} playAgain={this.playAgain} />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDom.render(<Quizbee />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}